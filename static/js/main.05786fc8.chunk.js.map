{"version":3,"sources":["components/Api.jsx","components/loader/1479.gif","components/Vids.jsx","components/PhotoDetails.jsx","components/Gfycat.jsx","components/SearchedPost.jsx","components/AsyncSearchBar.jsx","components/SearchReddit.jsx","App.js","index.js"],"names":["SimpleInfiniteList","props","useState","img","setImg","page","setPage","iddata","slice","filter","setFilter","baseUrl","subreddit","selectedValue","filtered","e","useEffect","a","fetch","length","map","id","data","then","response","json","currentImage","children","window","onscroll","Math","ceil","innerHeight","scrollY","document","documentElement","scrollHeight","console","log","className","Chips","Chip","value","onClick","target","breakpointCols","default","columnClassName","imgs","post_hint","to","src","url_overridden_by_dest","effect","delayMethod","threshold","Vids","theme","useMantineTheme","colorScheme","colors","dark","gray","is_video","style","width","margin","marginTop","Card","shadow","padding","Group","position","marginBottom","spacing","sm","Blockquote","title","href","url","PhotoDetails","navigate","useNavigate","useParams","detail","setDetail","redditurl","permalink","height","viewBox","fill","xmlns","d","stroke","imgdetail","transform","alt","Gfycat","post","setPost","axios","get","gfycats","giffy","max5mbGif","SearchedPost","searchfetched","index","AsyncSearchBar","setValue","cacheOptions","defaultOptions","getOptionLabel","label","display_name","getOptionValue","loadOptions","inputValue","child","onInputChange","onChange","location","reload","SearchReddit","toUpperCase","App","show","setShow","handleClose","class","localStorage","setItem","color","background","Offcanvas","onHide","Header","closeButton","Title","Body","path","element","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.05786fc8.chunk.js","sourcesContent":["import { useState, useEffect, useReducer } from \"react\"\r\nimport '../App.css';\r\nimport { Link } from \"react-router-dom\";\r\nimport { Chips, Chip } from '@mantine/core';\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\nimport 'react-lazy-load-image-component/src/effects/blur.css';\r\nimport Masonry from 'react-masonry-css'\r\n\r\nconst PAGE_NUMBER =1;\r\n\r\nexport const SimpleInfiniteList = (props) => {\r\n\r\n  const [img, setImg] = useState('')\r\n  const [page, setPage] = useState(PAGE_NUMBER)\r\n  const iddata = img.slice(-1)\r\n  const [filter, setFilter] = useState('')\r\n\r\n\r\n const baseUrl = 'https://www.reddit.com/r'\r\n const subreddit = props.selectedValue ? props.selectedValue : 'pics' \r\n\r\n\r\n\r\n  const filtered = (e) => {\r\n    setFilter(e)\r\n    \r\n  }\r\n\r\n  \r\n\r\n\r\n  useEffect ( async() => {\r\n    subreddit &&\r\n    await fetch(`${baseUrl}/${subreddit}/${filter}.json?after=${ iddata.length > 0 ? iddata.map(id => `t3_${id.data.id}`): ''}&page=${page}&limit=30`)\r\n    .then(response =>  response.json())\r\n    .then(data => setImg(currentImage =>  ([...currentImage,...data.data.children]))\r\n    )\r\n\r\n  },[page])\r\n\r\n\r\n\r\n  useEffect( async() => {\r\n  await fetch(`${baseUrl}/${subreddit}/${filter}.json?after=${ iddata.length > 0 ? iddata.map(id => `t3_${id.data.id}`): ''}&page=${page}&limit=30`)\r\n  .then(response => response.json())\r\n  .then(data => setImg([ ...data.data.children ] \r\n    )\r\n  )\r\n}, [filter])\r\n\r\nconst breakpointColumnsObj = {\r\n  default: 3,\r\n  1100: 2,\r\n  700: 2,\r\n  500: 2,\r\n  400: 2\r\n};\r\n\r\n\r\nconst scrollToEnd = () => {\r\n  setPage(page + 1) \r\n}\r\nwindow.onscroll = function () {\r\n  const bottom =  Math.ceil(window.innerHeight + window.scrollY) >= document.documentElement.scrollHeight\r\n  \r\n  if (bottom,\r\n     Math.ceil(window.innerHeight + window.scrollY) >= document.documentElement.scrollHeight\r\n    ) {\r\n      scrollToEnd() \r\n      console.log('loading....')\r\n  }\r\n}\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n\r\n\r\n\r\n\r\n\r\n    <div className='App'>\r\n\r\n    \r\n\r\n     \r\n\r\n    <div className=\"filters\">\r\n<Chips>\r\n  <Chip value=\"new\" onClick={(e) => filtered(e.target.value)}>New</Chip>\r\n  <Chip value=\"best\" onClick = {(e) => filtered(e.target.value)}>Best</Chip>\r\n  <Chip value=\"rising\" onClick = { (e) => filtered(e.target.value)}>Rising</Chip>\r\n  <Chip value=\"hot\" onClick = {(e) => filtered(e.target.value)}>Hot</Chip>\r\n  \r\n  \r\n</Chips>\r\n</div>\r\n\r\n<div className='col-lg-8 mx-auto'>\r\n\r\n<Masonry\r\n \r\n  breakpointCols={breakpointColumnsObj}\r\n  className=\"my-masonry-grid\"\r\n  columnClassName=\"my-masonry-grid_column\">\r\n\r\n    {img.length > 1 &&\r\n    \r\n      img.filter(imgs => imgs.data.post_hint==='image').map(imgs => (\r\n       <>\r\n\r\n\r\n        <div id='center'>\r\n         \r\n        <Link to={`/${imgs.data.id}`} >\r\n        <LazyLoadImage src={imgs.data.url_overridden_by_dest} effect=\"blur\" delayMethod='debounce' threshold='100'  >\r\n\r\n           \r\n          </LazyLoadImage  >\r\n          </Link>\r\n          \r\n         </div>\r\n          </>    \r\n      )\r\n      )\r\n    }    \r\n     </Masonry>\r\n </div>\r\n</div>\r\n\r\n    </>\r\n  )\r\n}","export default __webpack_public_path__ + \"static/media/1479.4ccf66d6.gif\";","import { useState, useEffect } from \"react\"\r\nimport '../App.css';\r\nimport loaderimg from './loader/1479.gif'\r\nimport {Blockquote, Card,  Group, useMantineTheme, SegmentedControl } from '@mantine/core';\r\nimport { activeElement } from \"dom-helpers\";\r\n\r\n\r\n\r\n\r\nconst PAGE_NUMBER =1;\r\nexport const Vids = () => {\r\n\r\n  const theme = useMantineTheme();\r\n  const secondaryColor = theme.colorScheme === 'dark'\r\n    ? theme.colors.dark[1]\r\n    : theme.colors.gray[7];\r\n\r\n\r\n  const [img, setImg] = useState('')\r\n  const [page, setPage] = useState(PAGE_NUMBER)\r\n\r\n  const iddata = img.slice(-1)\r\n  const [value, setValue] = useState([]);\r\n\r\n\r\n\r\n  \r\n  useEffect( () => {\r\n  fetch(`https://www.reddit.com/new.json?after=${ iddata.length > 0 ? iddata.map(id => `t3_${id.data.id}`): ''}&page=${page}&limit=100&t=year`)\r\n  .then(response => response.json())\r\n  .then(data => setImg([...img, ...data.data.children], \r\n    )\r\n  )\r\n}, [value,page])\r\n\r\nconst scrollToEnd = () => {\r\n  setPage(page + 1) \r\n}\r\nwindow.onscroll = function () { \r\n  const bottom =  Math.ceil(window.innerHeight + window.scrollY) >= document.documentElement.scrollHeight\r\n  \r\n  if (bottom,\r\n     Math.ceil(window.innerHeight + window.scrollY) >= document.documentElement.scrollHeight\r\n    ) {\r\n      scrollToEnd() \r\n      console.log('loading....')\r\n  }\r\n}\r\n\r\n  return (\r\n    <>\r\n  \r\n\r\n \r\n    <div className='App'>\r\n\r\n\r\n\r\n    {/* <SegmentedControl\r\n    className=\"segment\"\r\n      value={value}\r\n      onChange={setValue}\r\n      data={[\r\n        { label: 'New', value: 'new', activeElement },\r\n        { label: 'Rising', value: 'rising' },\r\n        { label: 'Popular', value: 'popular' },\r\n        { label: 'Hot', value: 'Hot' },\r\n      ]}\r\n    /> */}\r\n\r\n\r\n    {img.length > 1 &&\r\n    \r\n      img.filter(imgs => imgs.data.is_video).map(imgs => (\r\n       <>\r\n{console.log(imgs.data)}\r\n\r\n\r\n<div style={{ width: 340, margin: 'auto', marginTop: '10px' }}>\r\n      <Card shadow=\"sm\" padding=\"lg\">\r\n        \r\n        <Group position=\"apart\" style={{ marginBottom: 5, marginTop: theme.spacing.sm }}>\r\n        <Blockquote >{imgs.data.title}</Blockquote> \r\n          \r\n        </Group>\r\n\r\n        \r\n      </Card>\r\n    </div>\r\n        <div className='image'>\r\n          {/* <img src={imgs.data.url_overridden_by_dest.isvideo} alt=\"\" />  */}\r\n          <p>Example</p>\r\n         </div>\r\n\r\n         <div className='links'>\r\n     \r\n      <a href={imgs.data.url}>\r\n         \r\n         </a>\r\n  \r\n         \r\n         </div>\r\n\r\n         \r\n\r\n         </>    \r\n      )\r\n      )\r\n    }    \r\n\r\n\r\n\r\n   \r\n    \r\n</div>\r\n    </>\r\n  )\r\n}","import React, {useState, useEffect} from 'react'\r\nimport { useParams } from 'react-router'\r\nimport '../App.css'\r\nimport { useNavigate } from 'react-router';\r\n\r\n\r\n\r\nexport const PhotoDetails = () => {\r\n\r\n  const navigate = useNavigate();\r\n\r\n    const {id}  = useParams()\r\n    const [detail, setDetail] = useState('')\r\n\r\n\r\n    useEffect( () => {\r\n      fetch(`https://www.reddit.com/${id}.json`)\r\n      .then(response => response.json())\r\n      .then(data =>  setDetail(data[0].data.children)\r\n        \r\n      )\r\n    }, [id])\r\n\r\n\r\n    console.log(detail)\r\n\r\n    if(!detail) {\r\n      return null\r\n    }\r\n\r\n    console.log(detail)\r\n\r\n    const redditurl = 'https://www.reddit.com'+detail[0].data.permalink\r\n    \r\n    console.log(redditurl)\r\n\r\n\r\n    \r\n\r\n    return (\r\n\r\n\r\n    \r\n        \r\n        <div className=\"fullscreen-view__entry-container\">\r\n          <div className='fullscreen-view__entry'>\r\n\r\n\r\n          <div className='close' onClick={() => {navigate('/photos')}}>\r\n      <svg width=\"30\" height=\"30\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M18.75 5.25L5.25 18.75\" stroke=\"black\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path><path d=\"M18.75 18.75L5.25 5.25\" stroke=\"black\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></svg>\r\n      </div>\r\n          {\r\n            detail.map((imgdetail) => (\r\n\r\n              <>\r\n              <div className='post'>\r\n              <a href={redditurl} className=\"icon-button item-panel__icon item-panel__button\">\r\n            <svg stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" viewBox=\"0 0 24 24\" height=\"2em\" width=\"2em\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M4.222 19.778c.975.975 2.255 1.462 3.535 1.462 1.281-.001 2.562-.487 3.536-1.462l2.828-2.829-1.414-1.414-2.828 2.829c-1.169 1.167-3.072 1.169-4.243 0-1.169-1.17-1.169-3.073 0-4.243l2.829-2.828L7.051 9.879l-2.829 2.828C2.273 14.656 2.273 17.829 4.222 19.778zM19.778 11.293c1.948-1.949 1.948-5.122 0-7.071-1.95-1.95-5.123-1.948-7.071 0L9.879 7.051l1.414 1.414 2.828-2.829c1.17-1.167 3.073-1.169 4.243 0 1.169 1.17 1.169 3.073 0 4.243l-2.829 2.828 1.414 1.414L19.778 11.293z\"></path><path transform=\"rotate(-134.999 12 12)\" d=\"M11 5.999H13V18H11z\"></path></svg>\r\n            Source\r\n            </a>\r\n            \r\n              <img className='fullscreen-view__media' src={imgdetail.data.url} alt=\"\" />\r\n              \r\n            \r\n              </div>\r\n\r\n              <div className='post-title'>\r\n              <p className='title'>{imgdetail.data.title}</p>\r\n              </div>\r\n\r\n              \r\n            \r\n           \r\n\r\n              </>\r\n              \r\n            ))\r\n          }\r\n    \r\n\r\n           \r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport \"../App.css\";\r\nimport axios from \"axios\";\r\n\r\nexport const Gfycat = () => {\r\n  const [post, setPost] = useState();\r\n\r\n  useEffect(() => {\r\n    axios.get('https://api.gfycat.com/v1/gfycats/search?search_text=keywords&count=10000').then((response) => {\r\n      setPost(response.data.gfycats);\r\n    });\r\n  }, []);\r\n\r\n  if (!post) return null;\r\n\r\n  return (\r\n    <>\r\n\r\n    {\r\n      post.map(giffy => \r\n        <>\r\n        <img src={giffy.max5mbGif} alt=\"\" />\r\n        </>\r\n        )\r\n    }\r\n     \r\n    </>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from 'react'\r\n\r\nexport const SearchedPost = (props) => {\r\n    const {searchfetched} = props\r\n\r\n    return (\r\n        <div>\r\n            { searchfetched.length > 0 ?\r\n                searchfetched.map((post, index) => (\r\n                    <>\r\n                  <img src={post.data.url} alt=\"\" />\r\n                   </>\r\n                )):\r\n                <>\r\n               <p>Search Subreddits</p>\r\n                </>\r\n                \r\n            }\r\n            \r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React, {useEffect, useState} from 'react'\r\nimport AsyncSelect from 'react-select/async';\r\nimport { SearchedPost } from './SearchedPost';\r\nimport {Link, Navigate, useNavigate  } from 'react-router-dom';\r\nimport { components } from 'react-select';\r\nimport { SimpleInfiniteList } from './Api';\r\n\r\n\r\n\r\nexport const AsyncSearchBar = (props) => {\r\n  const [inputValue, setValue] = useState('');\r\n  const [selectedValue, setSelectedValue] = useState('');\r\n  const [searchfetched, setSearchfetched] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n\r\n  const handleInputChange = value => {\r\n    setValue(value);\r\n  };\r\n\r\n  const handleChange = value => {\r\n    console.log(value.value);\r\n    navigate(`/r/${value.value}`);    \r\n    window.location.reload();\r\n    \r\n  \r\n  }\r\n\r\nconst loadOptions =  (inputValue) => {\r\n  return  fetch(`https://www.reddit.com/subreddits/search.json?q=${inputValue}`)\r\n    .then(response => response.json())\r\n    .then(json => { \r\n      return json.data.children.map(child => ({\r\n        value: child.data.display_name,\r\n        label: child.data\r\n        \r\n      }));\r\n\r\n    });\r\n    \r\n  };\r\n \r\n\r\n  //Fetching selected subreddit\r\n  //  useEffect(() => {\r\n  //    if(selectedValue.value){\r\n  //      fetch(`https://www.reddit.com/r/${selectedValue.value}/new.json?limit=1000`)\r\n  //       .then(response => response.json())\r\n  //       .then(json => {\r\n  //         setSearchfetched(json.data.children);\r\n  //       })\r\n  //       .catch(error => {\r\n  //         console.log(error);\r\n  //       }\r\n  //       ) \r\n  // }\r\n  // }, [selectedValue.value])\r\n\r\n  \r\n\r\n\r\n    return (\r\n      <>\r\n\r\n    <AsyncSelect\r\n     cacheOptions\r\n     defaultOptions\r\n     value={selectedValue.value }\r\n     getOptionLabel={e => e.label.display_name}\r\n     getOptionValue={e => e.label.display_name}\r\n     loadOptions={loadOptions}\r\n     onInputChange={handleInputChange}\r\n     onChange={handleChange }/>\r\n  \r\n      <SearchedPost searchfetched = {searchfetched}/>\r\n      <SimpleInfiniteList selectedValue = {!selectedValue ? 'wallpaper' : selectedValue.value} />\r\n      </>\r\n    )\r\n}\r\n","import { useState, useEffect, useReducer } from \"react\"\r\nimport '../App.css';\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { Chips, Chip } from '@mantine/core';\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\nimport 'react-lazy-load-image-component/src/effects/blur.css';\r\nimport { PhotoDetails } from \"./PhotoDetails\";\r\nimport Masonry from 'react-masonry-css'\r\n\r\n\r\nconst PAGE_NUMBER =1;\r\n\r\nexport const SearchReddit = (props) => {\r\n  const [img, setImg] = useState('')\r\n  const [page, setPage] = useState(PAGE_NUMBER)\r\n  const iddata = img.slice(-1)\r\n  const [filter, setFilter] = useState('')\r\n\r\n  let {subreddit} = useParams();\r\n  console.log(subreddit)\r\n\r\n\r\n const baseUrl = 'https://www.reddit.com/r'\r\n\r\n\r\n\r\n  const filtered = (e) => {\r\n    setFilter(e)\r\n    \r\n  }\r\n\r\n  const breakpointColumnsObj = {\r\n    default: 3,\r\n    1100: 2,\r\n    700: 2,\r\n    500: 2,\r\n    400: 2\r\n  };\r\n\r\n  \r\n\r\n\r\n  useEffect ( async() => {\r\n    subreddit &&\r\n    await fetch(`${baseUrl}/${subreddit}/${filter}.json?after=${ iddata.length > 0 ? iddata.map(id => `t3_${id.data.id}`): ''}&page=${page}&limit=30`)\r\n    .then(response =>  response.json())\r\n    .then(data => setImg(currentImage =>  ([...currentImage,...data.data.children]))\r\n    )\r\n\r\n  },[page])\r\n\r\n\r\n\r\n  useEffect( async() => {\r\n  await fetch(`${baseUrl}/${subreddit}/${filter}.json?after=${ iddata.length > 0 ? iddata.map(id => `t3_${id.data.id}`): ''}&page=${page}&limit=30`)\r\n  .then(response => response.json())\r\n  .then(data => setImg([ ...data.data.children ] \r\n    )\r\n  )\r\n}, [filter])\r\n\r\n\r\n\r\n\r\nconst scrollToEnd = () => {\r\n  setPage(page + 1) \r\n}\r\nwindow.onscroll = function () {\r\n  const bottom =  Math.ceil(window.innerHeight + window.scrollY) >= document.documentElement.scrollHeight\r\n  \r\n  if (bottom,\r\n     Math.ceil(window.innerHeight + window.scrollY) >= document.documentElement.scrollHeight\r\n    ) {\r\n      scrollToEnd() \r\n      console.log('loading....')\r\n  }\r\n}\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n\r\n\r\n\r\n\r\n    <div className='App'>\r\n\r\n        <div className='subreddittitle'>\r\n            <p>{subreddit.toUpperCase()}</p>\r\n        </div>\r\n\r\n    \r\n\r\n     \r\n\r\n    <div className=\"filters\">\r\n<Chips>\r\n  <Chip value=\"new\" onClick={(e) => filtered(e.target.value)}>New</Chip>\r\n  <Chip value=\"best\" onClick = {(e) => filtered(e.target.value)}>Top</Chip>\r\n  <Chip value=\"rising\" onClick = { (e) => filtered(e.target.value)}>Rising</Chip>\r\n  <Chip value=\"hot\" onClick = {(e) => filtered(e.target.value)}>Random</Chip>\r\n  \r\n  \r\n</Chips>\r\n</div>\r\n\r\n<Masonry\r\n \r\n  breakpointCols={breakpointColumnsObj}\r\n  className=\"my-masonry-grid\"\r\n  columnClassName=\"my-masonry-grid_column\">\r\n\r\n    {img.length > 1 &&\r\n    \r\n      img.filter(imgs => imgs.data.post_hint==='image').map(imgs => (\r\n       <>\r\n\r\n\r\n        <div id='center'>\r\n         \r\n        <Link to={`/${imgs.data.id}`} >\r\n        <LazyLoadImage src={imgs.data.url_overridden_by_dest} effect=\"blur\" delayMethod='debounce' threshold='100'  >\r\n\r\n           \r\n          </LazyLoadImage  >\r\n          </Link>\r\n          \r\n         </div>\r\n          </>    \r\n      )\r\n      )\r\n    }   \r\n      </Masonry>\r\n </div> \r\n\r\n\r\n    </>\r\n  )\r\n}","import \"./App.css\";\r\nimport { Routes, Route, Link } from \"react-router-dom\";\r\nimport React, { useState} from \"react\";\r\nimport { SimpleInfiniteList } from \"./components/Api\";\r\nimport {Vids} from './components/Vids'\r\nimport {PhotoDetails} from './components/PhotoDetails'\r\nimport { Gfycat } from \"./components/Gfycat\";\r\nimport { Offcanvas} from 'react-bootstrap';\r\nimport { AsyncSearchBar } from \"./components/AsyncSearchBar\";\r\nimport { SearchReddit } from \"./components/SearchReddit\";\r\n\r\n\r\nfunction App() {\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n\r\n  return (\r\n    <>\r\n      <header class=\"header\" id=\"header\">\r\n        <nav class=\"nav container\">\r\n            <Link to=\"/\" class=\"nav__logo\">Infinity</Link>\r\n            <div class=\"nav__menu\" id=\"nav-menu\">\r\n                <ul class=\"nav__list\">\r\n                    <li class=\"nav__item\">\r\n                        <Link to='/photos' class=\"nav__link \">\r\n                            <i class='bx bx-image nav__icon'></i>\r\n                            <span class=\"nav__name\">Pictures</span>\r\n                        </Link>\r\n                    </li>\r\n                    <li class=\"nav__item\">\r\n                        <Link to='/videos'  class=\"nav__link\">\r\n                            <i class='bx bx-video nav__icon'></i>\r\n                            <span class=\"nav__name\">Videos</span>\r\n                        </Link>\r\n                    </li>\r\n                    <li class=\"nav__item\">\r\n                        <a onClick={handleShow} class=\"nav__link\">\r\n                            <i class='bx bx-search nav__icon'></i>\r\n                            <span class=\"nav__name\">Search</span>\r\n                        </a>\r\n                    </li>\r\n\r\n                    <li class=\"nav__item\">\r\n                        <a onClick={localStorage.setItem('choice', 'Yes')}  class=\"nav__link\">\r\n                        <i class='bx bx-globe' style={{color: 'white', background: 'black'}}></i>\r\n                            <span class=\"nav__name\">Portfolio</span>\r\n                        </a>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n            \r\n        </nav>\r\n    </header>\r\n    <Offcanvas show={show} onHide={handleClose} className='searchbackground'>\r\n        <Offcanvas.Header closeButton>\r\n          <Offcanvas.Title>Search</Offcanvas.Title>\r\n        </Offcanvas.Header>\r\n        <Offcanvas.Body>\r\n        <AsyncSearchBar handleClose= {handleClose} />\r\n        </Offcanvas.Body>\r\n      </Offcanvas>\r\n        <Routes>\r\n          <Route path=\"photos\" element={<SimpleInfiniteList />}></Route>\r\n          <Route path=\"videos\" element={<Vids />} />\r\n          <Route path=\"/:id\" element={<PhotoDetails/>}></Route>\r\n          <Route path ='/gfycat' element={<Gfycat/>}/>\r\n          <Route path = 'r/:subreddit' element={<SearchReddit />}/>\r\n          \r\n        </Routes>\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n     <Router>\r\n    <App />\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}